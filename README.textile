h1. Cartoque: a free & simple CMDB

Build status: "!https://secure.travis-ci.org/jbbarth/cartoque.png?branch=master!":http://travis-ci.org/jbbarth/cartoque
Dependencies: "!https://gemnasium.com/jbbarth/cartoque.png!":https://gemnasium.com/rails/rails

h2. Licence

Cartoque is released under the MIT license.

h2. Credits

This application is built using the following technologies :
* Ruby on Rails framework for server-side logic
* jQuery and various jQuery plugins for client-side animations
* some awesome javascript graphic libraries like RaphaelJS or d3.js
* some icons from famfamfam, fatcow and pc.de-duesseldorf sets
* some webfonts from Google Webfonts: Ubuntu and LeckerLi One

Many functionalities or techniques used here are inspired by the awesome screencasts by Ryan Bates @ http://www.railscasts.com, including :
* Site Wide Announcements (Episode 103)
* PDFs exports with PDFKit (Episode 220)
* Inherited Resources to DRY up controllers (Episode 230)
* Simple_form to DRY up forms (Episode 234)
* Search/Sort with AJAX (Episode 240)
* Simple authentication with OmniAuth (Episode 241)
* AJAX history state (Episode 246)
* Trees with Ancestry (Episode 262)
* Upgrading to Rails 3.1 (Episode 282)

And soon coming:
* 114_endless_page
* 165_edit_multiple
* 182_cropping_images
* 192_authorization_with_cancan
* 213_calendars
* 229_polling_for_changes
* 244_gravatar
* 249_notifications_in_rails_3
* 253_carrierwave_file_uploads
* 254_pagination_with_kaminari
* 255_undo_with_paper_trail
* 260_messaging_with_faye
* 263_client_side_validations

Not mentionning all the more technical aspects I learned through Railscasts and I cannot list here.
